# Generated by Django 4.1.1 on 2023-06-26 16:28

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('socket', models.CharField(max_length=100)),
                ('cores', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('threads', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('form_factor', models.CharField(choices=[('1', 'One'), ('2', 'Two'), ('3', 'Three'), ('4', 'Four'), ('5', 'Five')], max_length=10)),
                ('socket', models.CharField(max_length=10)),
                ('chipset', models.CharField(max_length=10)),
                ('memory_type', models.CharField(max_length=10)),
                ('ram_capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('ram_slots', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('sata_slots', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('m2_3_slots', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('m2_4_slots', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
