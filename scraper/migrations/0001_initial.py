# Generated by Django 4.1.1 on 2023-07-10 18:38

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('motherboard_size', models.CharField(choices=[('E-ATX', 'E-ATX'), ('ATX', 'ATX'), ('Micro-ATX', 'Micro-ATX'), ('Mini-ITX', 'Mini-ITX')], max_length=10)),
                ('psu_size', models.CharField(choices=[('ATX', 'ATX'), ('TFX', 'TFX'), ('SFX', 'SFX')], max_length=10)),
                ('gpu_length', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('air_cooler_height', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('_120_radiator_support', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_140_radiator_support', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_240_radiator_support', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_280_radiator_support', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_360_radiator_support', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_2_5_disk_slot', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_3_5_disk_slot', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Chipset',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='GPUSeries',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='HDD',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('form_factor', models.CharField(choices=[('2.5', '2.5'), ('3.5', '3.5'), ('M.2', 'M.2')], max_length=10)),
                ('bus', models.CharField(max_length=100)),
                ('rpm', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PSUEfficiency',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RAMType',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Socket',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SSD',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('form_factor', models.CharField(choices=[('2.5', '2.5'), ('3.5', '3.5'), ('M.2', 'M.2')], max_length=10)),
                ('bus', models.CharField(max_length=100)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('mhz', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('units', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraper.ramtype')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PSU',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('watts', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('form_factor', models.CharField(choices=[('ATX', 'ATX'), ('TFX', 'TFX'), ('SFX', 'SFX')], max_length=10)),
                ('_8_pcie_connectors', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_6_pcie_connectors', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('efficiency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraper.psuefficiency')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('form_factor', models.CharField(choices=[('E-ATX', 'E-ATX'), ('ATX', 'ATX'), ('Micro-ATX', 'Micro-ATX'), ('Mini-ITX', 'Mini-ITX')], max_length=10)),
                ('ram_capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('ram_slots', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('sata_slots', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('m2_3_slots', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('m2_4_slots', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('chipset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraper.chipset')),
                ('memory_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraper.ramtype')),
                ('socket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraper.socket')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GPU',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('vram', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('tdp', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('length', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('_8_pin_connectors', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_6_pin_connectors', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraper.gpuseries')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CPU',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('cores', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('threads', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('integrated_graphics', models.BooleanField()),
                ('socket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scraper.socket')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LiquidCooler',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('radiator', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('_80_mm_fans', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_92_mm_fans', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_120_mm_fans', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_140_mm_fans', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('_200_mm_fans', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('supported_sockets', models.ManyToManyField(to='scraper.socket')),
            ],
            options={
                'ordering': ['id'],
                'unique_together': {('name', 'radiator')},
            },
        ),
        migrations.CreateModel(
            name='AirCooler',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('height', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('supported_sockets', models.ManyToManyField(to='scraper.socket')),
            ],
            options={
                'ordering': ['id'],
                'unique_together': {('name', 'height')},
            },
        ),
    ]
